<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.makenv.part1.mapper.RoleMapper">

    <resultMap id="roleResultMap" type="roleTest">
        <id property="id" column="id"/>
        <result property="roleName" column="role_name"/>
        <result property="note" column="note" typeHandler="com.makenv.part1.typeHandler.MyStringTypeHandler"/>
    </resultMap>

    <select id="findRoles" parameterType="string" resultMap="roleResultMap">
        select id, role_name, note from role where 1 = 1
        <if test="roleName != null and roleName != ''">
            and role_name like concat('%',#{roleName},'%')
        </if>
    </select>

    <select id="findRoles2" parameterType="string" resultMap="roleResultMap">
        select id, role_name, note from role where 1 = 1
        <choose>
            <when test="id != null and id != ''">
                and id = #{id}
            </when>
            <when test="roleName != null and roleName != ''">
                and role_name like concat('%',#{roleName},'%')
            </when>
            <otherwise>
                and note id not null
            </otherwise>
        </choose>
    </select>

    <select id="getRole" parameterType="long" resultType="roleTest">
        select id, role_name as roleName, note from role where id = #{id}
    </select>

    <select id="getRole2" parameterType="roleParam" resultType="roleTest">
        select id, role_name as roleName, note from role where role_name = #{roleName} and note = #{note}
    </select>

<select id="getRole3" parameterType="string" resultMap="roleResultMap">
    <bind name="pattern" value="'%' + _parameter + '%'"/>
    select id, role_name, note from role where role_name LIKE #{pattern}
</select>

    <select id="findRoles4" parameterType="string" resultMap="roleResultMap">
        select id, role_name, note from role
        <if test="type = 'y'">
            where 1 = 1
        </if>
    </select>

    <select id="findRoles3" resultType="roleTest">
        select * from role where id IN
        <foreach collection="collection" item="role" index="index" open="(" separator="," close=")">
            #{role}
        </foreach>
    </select>

    <delete id="deleteRole" parameterType="long">
        delete from role where id = #{id}
    </delete>

    <insert id="insertRole" parameterType="roleTest" useGeneratedKeys="true" keyProperty="id">
        insert into role (role_name, note) values (#{roleName}, #{note})
    </insert>

    <!--<update id="updateRole" parameterType="roleTest">-->
        <!--update role-->
        <!--<set>-->
            <!--<if test="roleName != null and roleName != ''">-->
                <!--role_name = #{roleName},-->
            <!--</if>-->
            <!--<if test="note != null and note != ''">-->
                <!--note = #{note}-->
            <!--</if>-->
        <!--</set>-->
        <!--where id = #{id}-->
    <!--</update>-->

    <update id="updateRole" parameterType="roleTest">
        update role
        <trim prefix="set" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="note != null and note != ''">
                note = #{note}
            </if>
        </trim>
        where id = #{id}
    </update>

</mapper>